package lexer;

import java.util.*;

/**
 * This file is automatically generated
 * it contains the table of mappings from token
 * constants to their Symbols
 */
public class TokenType {

  public static Map<Tokens,Symbol> tokens = new HashMap<>();

  public static void init() {

    tokens.put(Tokens.Program, Symbol.symbol("program",Tokens.Program));
    tokens.put(Tokens.Int, Symbol.symbol("int",Tokens.Int));
    tokens.put(Tokens.BOOLean, Symbol.symbol("boolean",Tokens.BOOLean));
    tokens.put(Tokens.If, Symbol.symbol("if",Tokens.If));
    tokens.put(Tokens.Then, Symbol.symbol("then",Tokens.Then));
    tokens.put(Tokens.Else, Symbol.symbol("else",Tokens.Else));
    tokens.put(Tokens.While, Symbol.symbol("while",Tokens.While));
    tokens.put(Tokens.Function, Symbol.symbol("function",Tokens.Function));
    tokens.put(Tokens.Return, Symbol.symbol("return",Tokens.Return));
    tokens.put(Tokens.Identifier, Symbol.symbol("<id>",Tokens.Identifier));
    tokens.put(Tokens.INTeger, Symbol.symbol("<int>",Tokens.INTeger));
    tokens.put(Tokens.LeftBrace, Symbol.symbol("{",Tokens.LeftBrace));
    tokens.put(Tokens.RightBrace, Symbol.symbol("}",Tokens.RightBrace));
    tokens.put(Tokens.LeftParen, Symbol.symbol("(",Tokens.LeftParen));
    tokens.put(Tokens.RightParen, Symbol.symbol(")",Tokens.RightParen));
    tokens.put(Tokens.Comma, Symbol.symbol(",",Tokens.Comma));
    tokens.put(Tokens.Assign, Symbol.symbol("=",Tokens.Assign));
    tokens.put(Tokens.Equal, Symbol.symbol("==",Tokens.Equal));
    tokens.put(Tokens.NotEqual, Symbol.symbol("!=",Tokens.NotEqual));
    tokens.put(Tokens.Less, Symbol.symbol("<",Tokens.Less));
    tokens.put(Tokens.LessEqual, Symbol.symbol("<=",Tokens.LessEqual));
    tokens.put(Tokens.Plus, Symbol.symbol("+",Tokens.Plus));
    tokens.put(Tokens.Minus, Symbol.symbol("-",Tokens.Minus));
    tokens.put(Tokens.Or, Symbol.symbol("|",Tokens.Or));
    tokens.put(Tokens.And, Symbol.symbol("&",Tokens.And));
    tokens.put(Tokens.Multiply, Symbol.symbol("*",Tokens.Multiply));
    tokens.put(Tokens.Divide, Symbol.symbol("/",Tokens.Divide));
    tokens.put(Tokens.Comment, Symbol.symbol("//",Tokens.Comment));
    tokens.put(Tokens.Greater, Symbol.symbol(">",Tokens.Greater));
    tokens.put(Tokens.GreaterEqual, Symbol.symbol(">=",Tokens.GreaterEqual));
    tokens.put(Tokens.LeftBracket, Symbol.symbol("[",Tokens.LeftBracket));
    tokens.put(Tokens.RightBracket, Symbol.symbol("]",Tokens.RightBracket));
    tokens.put(Tokens.Modulo, Symbol.symbol("%",Tokens.Modulo));
    tokens.put(Tokens.Arrow, Symbol.symbol("->",Tokens.Arrow));
    tokens.put(Tokens.Unless, Symbol.symbol("unless",Tokens.Unless));
    tokens.put(Tokens.Select, Symbol.symbol("select",Tokens.Select));
    tokens.put(Tokens.StringType, Symbol.symbol("string",Tokens.StringType));
    tokens.put(Tokens.StringLit, Symbol.symbol("<string>",Tokens.StringLit));
    tokens.put(Tokens.HexType, Symbol.symbol("hex",Tokens.HexType));
    tokens.put(Tokens.HexLit, Symbol.symbol("<hex>",Tokens.HexLit));
  }
}
